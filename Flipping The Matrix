#include <stdio.h>

int max(int a, int b, int c, int d) {
    int m = a;
    if (b > m) m = b;
    if (c > m) m = c;
    if (d > m) m = d;
    return m;
}

int flippingMatrix(int matrix_rows, int matrix_columns, int** matrix) {
    int n = matrix_rows / 2;
    int sum = 0;
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            sum += max(
                matrix[i][j],
                matrix[i][matrix_columns - 1 - j],
                matrix[matrix_rows - 1 - i][j],
                matrix[matrix_rows - 1 - i][matrix_columns - 1 - j]
            );
        }
    }
    return sum;
}

int main() {
    int q;
    scanf("%d", &q);

    for (int t = 0; t < q; t++) {
        int n;
        scanf("%d", &n);
        int size = 2 * n;

        int** matrix = malloc(size * sizeof(int*));
        for (int i = 0; i < size; i++) {
            matrix[i] = malloc(size * sizeof(int));
            for (int j = 0; j < size; j++) {
                scanf("%d", &matrix[i][j]);
            }
        }

        int result = flippingMatrix(size, size, matrix);
        printf("%d\n", result);

        for (int i = 0; i < size; i++) free(matrix[i]);
        free(matrix);
    }
    return 0;
}
